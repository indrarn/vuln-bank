name: DevSecOps Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: indrarn14/vuln-bank
  DOCKER_TAG: ${{ github.sha }}

jobs:
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    outputs:
      secrets-found: ${{ steps.gitleaks.outputs.secrets-found }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run GitLeaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Check GitLeaks Results
        run: |
          if [ "${{ steps.gitleaks.outcome }}" == "failure" ]; then
            echo "secrets-found=true" >> $GITHUB_OUTPUT
            echo "🚨 Secrets detected by GitLeaks!"
            exit 1
          else
            echo "secrets-found=false" >> $GITHUB_OUTPUT
            echo "✅ No secrets detected"
          fi

      - name: Upload GitLeaks Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: gitleaks-report
          path: results.sarif
          retention-days: 1

  snyk-sca:
    name: SCA - Snyk Dependency Scan
    runs-on: ubuntu-latest
    needs: secret-scanning
    if: needs.secret-scanning.result == 'success'
    outputs:
      vulnerabilities-found: ${{ steps.check-sca.outputs.vulnerabilities-found }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk SCA Scan
        id: snyk-scan
        run: snyk test --severity-threshold=high --json-file-output=snyk-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Process Snyk Results
        id: check-sca
        run: |
          if [ "${{ steps.snyk-scan.outcome }}" == "failure" ]; then
            echo "vulnerabilities-found=true" >> $GITHUB_OUTPUT
            echo "🚨 High/Critical vulnerabilities found!"

            if [ -f snyk-report.json ]; then
              echo "📋 Vulnerability Summary:"
              jq -r '.vulnerabilities[]? | select(.severity == "high" or .severity == "critical") | "- \(.title) (\(.severity)): \(.packageName)@\(.version)"' snyk-report.json | head -5
            fi

            echo "⚠️ Continuing deployment with vulnerabilities (review recommended)"
          else
            echo "vulnerabilities-found=false" >> $GITHUB_OUTPUT
            echo "✅ No high/critical vulnerabilities found"
          fi

      - name: Upload Snyk SCA Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-report
          path: snyk-report.json
          retention-days: 1

  snyk-sast:
    name: SAST - Snyk Code Analysis
    runs-on: ubuntu-latest
    needs: [secret-scanning, snyk-sca]
    if: needs.secret-scanning.result == 'success' && needs.snyk-sca.result == 'success'
    outputs:
      code-issues-found: ${{ steps.check-sast.outputs.code-issues-found }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Run Snyk Code (SAST)
        id: snyk-code
        run: snyk code test --severity-threshold=high --json-file-output=snyk-code-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Process Snyk Code Results
        id: check-sast
        run: |
          if [ "${{ steps.snyk-code.outcome }}" == "failure" ]; then
            echo "code-issues-found=true" >> $GITHUB_OUTPUT
            echo "🚨 High/Critical code vulnerabilities found!"

            if [ -f snyk-code-report.json ]; then
              echo "📋 Code Issues Summary:"
              jq -r '.runs[]?.results[]? | select(.level == "error" or .level == "warning") | "- " + (.message.text // "No message") + " (" + .level + "): " + (.locations[0].physicalLocation.artifactLocation.uri // "unknown") + ":" + (.locations[0].physicalLocation.region.startLine|tostring)' snyk-code-report.json | head -5
            fi

            echo "⚠️ Continuing deployment with code issues (review recommended)"
          else
            echo "code-issues-found=false" >> $GITHUB_OUTPUT
            echo "✅ No high/critical code vulnerabilities found"
          fi

      - name: Upload Snyk Code Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-code-report
          path: snyk-code-report.json
          retention-days: 1

  docker-build-scan:
    name: Container Scan - Snyk
    runs-on: ubuntu-latest
    needs: [snyk-sast]
    if: needs.snyk-sast.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} .

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Scan Docker image with Snyk
        run: snyk container test ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }} --severity-threshold=high --file=Dockerfile --json-file-output=snyk-container-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}

      - name: Upload Snyk Container Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-container-report
          path: snyk-container-report.json
          retention-days: 1

